plugins {
    id 'java'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'nl.devpieter'
version = '2.0.0'

jar {
    destinationDirectory = file("C:\\Users\\devpi\\Desktop\\test_server\\Velocity Lobbies Setup\\velocity\\plugins")
}

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "pietr-space"
        url "https://maven.pietr.space/releases"
    }
}

dependencies {
    compileOnly("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")
    annotationProcessor("com.velocitypowered:velocity-api:3.4.0-SNAPSHOT")

    // SignalR
    implementation("com.microsoft.signalr:signalr:8.0.10")

    // Sees
    implementation("nl.devpieter:sees:1.1.0")

    // Kotlin Standard Library
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
}

def targetJavaVersion = 21
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = ['version': project.version]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

project.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)

shadowJar {
    archiveClassifier.set('')
    destinationDirectory = file("C:\\Users\\devpi\\Desktop\\test_server\\Velocity Lobbies Setup\\velocity\\plugins")
}

build.dependsOn shadowJar
kotlin {
    jvmToolchain(21)
}